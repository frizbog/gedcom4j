<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Derived from the src files and gedcom4j.properties -->
    <groupId>org.gedcom4j</groupId>
    <artifactId>gedcom4j</artifactId>
    <version>2.1.10-SNAPSHOT</version>

    <!-- Derived from project name and README -->
    <name>gedcom4j</name>
    <description>gedcom4j is a Java library for parsing and writing GEDCOM 5.5 and 5.5.1 files.</description>

    <dependencies>
        <!-- Dependency on junit-4.10 for unit testing purposes -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Project building -->
    <build>
        <!-- Source directories for both library and testing -->
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>

        <plugins>
            <!-- Add compiler plugin in order to specify Java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <!-- Add the source plugin to make gedcom4j-sources.jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>javadoc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Add the javadoc plugin to make gedcom4j-javadoc.jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <configuration>
                    <javadocVersion>1.5</javadocVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>source</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Execute the PMD plugin during the test phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.0</version>
                <executions>
                    <execution>
                        <id>pmd</id>
                        <phase>test</phase>
                        <goals>
                            <goal>pmd</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- PMD defaults to 1.8, need to specify that we're using 1.5 -->
                    <targetJdk>1.5</targetJdk>
                    <!-- Adding the PMD configuration file in root directory -->
                    <rulesets>
                        <ruleset>${project.basedir}/pmd-config.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
            <!-- Execute the FindBugs plugin during the test phase -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>findbugs</id>
                        <phase>test</phase>
                        <goals>
                            <goal>findbugs</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Make sure that Findbugs writes an XML file -->
                    <xmlOutput>true</xmlOutput>
                    <!-- FindBugs defaults to 768M of heap space, but the Maven plugin
                        defaults to only 512M -->
                    <maxHeap>768</maxHeap>
                </configuration>
            </plugin>
            <!-- Execute the Cobertura plugin during the test phase -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>cobertura</id>
                        <phase>test</phase>
                        <goals>
                            <goal>cobertura</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Execute the Checkstyle plugin during the test phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>test</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>${project.basedir}/checkstyle-config.xml</configLocation>
                </configuration>
            </plugin>
            <!-- Sign artifacts with GnuPG: see https://maven.apache.org/plugins/maven-gpg-plugin/usage.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <!-- Defined in settings.xml -->
                        <configuration>
                            <keyname>${gpg.keyname}</keyname>
                            <passphraseServerId>${gpg.keyname}</passphraseServerId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>sonatype-nexus-staging</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- Set the encoding to UTF-8 in order to preserve platform independence -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

</project>